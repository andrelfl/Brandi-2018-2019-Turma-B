{
	"info": {
		"_postman_id": "ea862f18-7112-48be-b830-12107abb1af6",
		"name": "Testes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Teste de um Login Correto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b0d52070-f33e-487e-9db5-28d36f7e719e",
						"exec": [
							"pm.test(\"Ligação bem sucedida\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Mensagem de erro não presente\", function () {",
							"    pm.response.to.have.body(\"\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"username\" : \"joaon\",\r\n   \"password\" : \"pass123\"\r\n }"
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/auth",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"auth"
					]
				},
				"description": "Testa se um utilizador se pode autenticar de forma correta"
			},
			"response": []
		},
		{
			"name": "Teste de um Login Incorreto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b0d52070-f33e-487e-9db5-28d36f7e719e",
						"exec": [
							"pm.test(\"Ligação bem sucedida\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Mensagem de erro presente\", function () {",
							"    pm.response.to.have.body(\"Incorrect Username and/or Password!\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"username\" : \"joao\",\r\n   \"password\" : \"pass123\"\r\n }"
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/auth",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"auth"
					]
				},
				"description": "Testa se um utilizador se pode autenticar de forma correta"
			},
			"response": []
		},
		{
			"name": "Teste de falta de parâmetros no Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "855bfd9c-b3e5-4915-a81a-0efc1e52a153",
						"exec": [
							"pm.test(\"Ligação bem sucedida\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Falta de Parâmetros\", function () {",
							"    pm.response.to.have.body(\"Please enter Username and Password!\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"username\" : \"\",\r\n   \"password\" : \"pass123\"\r\n }"
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/auth",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste da ligação no Pedido dos Técnicos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d139cd1-3fd1-4e8e-90ed-3b8a0cb69afd",
						"exec": [
							"pm.test(\"Teste às ligações\", function () {",
							"    //se o estado for 200 retorna o JSON que contem os tecnicos",
							"    if(pm.response.to.have.status(200)){",
							"        pm.test(\"Resposta de /tecnicos\", function () {",
							"            var jsonData = pm.response.json();",
							"            pm.expect(jsonData).to.eql([",
							"            {",
							"                \"idTecnico\": 1,",
							"                \"nome\": \"João Nunes\",",
							"                \"username\": \"joaon\",",
							"                \"password\": \"pass123\",",
							"                \"email\": \"jn@hotmail.com\",",
							"                \"tipo\": \"aluno\",",
							"                \"habilitacoes\": \"\",",
							"                \"nivelProfissional\": 0",
							"            },",
							"            {",
							"                \"idTecnico\": 2,",
							"                \"nome\": \"Edgar Oliveira\",",
							"                \"username\": \"edgaroli\",",
							"                \"password\": \"pass123\",",
							"                \"email\": \"eo@hotmail.com\",",
							"                \"tipo\": \"aluno\",",
							"                \"habilitacoes\": \"\",",
							"                \"nivelProfissional\": 0",
							"            },",
							"            {",
							"                \"idTecnico\": 3,",
							"                \"nome\": \"Hélder Lopes\",",
							"                \"username\": \"hellopes\",",
							"                \"password\": \"pass123\",",
							"                \"email\": \"hl@hotmail.com\",",
							"                \"tipo\": \"aluno\",",
							"                \"habilitacoes\": \"\",",
							"                \"nivelProfissional\": 0",
							"            },",
							"            {",
							"                \"idTecnico\": 4,",
							"                \"nome\": \"Miguel Tomé\",",
							"                \"username\": \"mtome\",",
							"                \"password\": \"pass123\",",
							"                \"email\": \"mt@hotmail.com\",",
							"                \"tipo\": \"aluno\",",
							"                \"habilitacoes\": \"\",",
							"                \"nivelProfissional\": 0",
							"            },",
							"            {",
							"                \"idTecnico\": 5,",
							"                \"nome\": \"David Moreno\",",
							"                \"username\": \"dmoreno\",",
							"                \"password\": \"pass123\",",
							"                \"email\": \"dm@hotmail.com\",",
							"                \"tipo\": \"aluno\",",
							"                \"habilitacoes\": \"\",",
							"                \"nivelProfissional\": 0",
							"            },",
							"            {",
							"                \"idTecnico\": 6,",
							"                \"nome\": \"Diogo Ribeiro\",",
							"                \"username\": \"dribeiro\",",
							"                \"password\": \"pass123\",",
							"                \"email\": \"dr@hotmail.com\",",
							"                \"tipo\": \"aluno\",",
							"                \"habilitacoes\": \"\",",
							"                \"nivelProfissional\": 0",
							"            },",
							"            {",
							"                \"idTecnico\": 7,",
							"                \"nome\": \"André Fronteira\",",
							"                \"username\": \"afronteira\",",
							"                \"password\": \"pass123\",",
							"                \"email\": \"af@hotmail.com\",",
							"                \"tipo\": \"aluno\",",
							"                \"habilitacoes\": \"\",",
							"                \"nivelProfissional\": 0",
							"            }",
							"            ]);",
							"        });",
							"    }",
							"    //caso o estado for 500 dá erro",
							"    else if(pm.response.to.have.status(500)){",
							"        pm.response.to.have.body(\"Erro na query\");",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/tecnicos",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"tecnicos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de um técnico com ID inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fa2e3dd7-905e-4b57-8a1a-00026d799368",
						"exec": [
							"pm.test(\"Ligação não encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de erro - Tecnico não encontrado\", function () {",
							"    pm.response.to.have.body({",
							"        \"erro\": \"Tecnico not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/tecnicos/id/10",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"tecnicos",
						"id",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de um técnico com ID válido",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "62c70aaa-82dd-42ff-97d2-f3f0d315a4f8",
						"exec": [
							"pm.test(\"Ligação bem sucedida\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Encontra o tecnico 1\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql([",
							"    {",
							"        \"idTecnico\": 1,",
							"        \"nome\": \"João Nunes\",",
							"        \"username\": \"joaon\",",
							"        \"password\": \"pass123\",",
							"        \"email\": \"jn@hotmail.com\",",
							"        \"tipo\": \"aluno\",",
							"        \"habilitacoes\": \"\",",
							"        \"nivelProfissional\": 0",
							"    }",
							"]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/tecnicos/id/1",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"tecnicos",
						"id",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d8f0c67-8336-490f-9769-aca8d65cf9cd",
						"exec": [
							"pm.test(\"Ligação Bem Sucedida\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/logout",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de pedido dos Materiais",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "63c09ac0-0aea-45e6-971a-9afcae4344d0",
						"exec": [
							"pm.test(\"Teste à Ligação com o Servidor\", function () {",
							"    //Se o estado for 200",
							"    if(pm.response.to.have.status(200)){",
							"         pm.test(\"Resposta de /materiais\", function () {",
							"            var jsonData = pm.response.json();",
							"            pm.expect(jsonData).to.eql([",
							"    {",
							"        \"idMaterial\": 1,",
							"        \"material\": \"Nikon 3300\",",
							"        \"quantidade\": \"\",",
							"        \"procedimento\": 2",
							"    },",
							"    {",
							"        \"idMaterial\": 2,",
							"        \"material\": \"Pano, trincha, água\",",
							"        \"quantidade\": \"\",",
							"        \"procedimento\": 4",
							"    },",
							"    {",
							"        \"idMaterial\": 3,",
							"        \"material\": \"Nikon 3300\",",
							"        \"quantidade\": \"\",",
							"        \"procedimento\": 5",
							"    },",
							"    {",
							"        \"idMaterial\": 4,",
							"        \"material\": \"Bisturi 11, etiquetas, contentor, zaragatoa\",",
							"        \"quantidade\": \"oito\",",
							"        \"procedimento\": 7",
							"    }",
							"]);",
							"         });",
							"    }",
							"    //Se o estado for 500",
							"    else if(pm.response.to.have.status(500)){",
							"        pm.response.to.have.body(\"Erro na query\");",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/materiais/",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"materiais",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de um material com ID inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e9757372-07a5-470e-b5fb-684d8e9956fd",
						"exec": [
							"pm.test(\"Ligação Não Encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de Erro encontrada\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\": \"Material not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/materiais/id/-1",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"materiais",
						"id",
						"-1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de pedido dos procedimentos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "60a66bec-d386-4f24-acb7-eeb066c4eb01",
						"exec": [
							"pm.test(\"Teste à Ligação com o Servidor\", function () {",
							"    //Se o estado for 200",
							"    if(pm.response.to.have.status(200)){",
							"         pm.test(\"Resposta de /procedimentos\", function () {",
							"            var jsonData = pm.response.json();",
							"            pm.expect(jsonData).to.eql([",
							"    {",
							"        \"idProcedimento\": 1,",
							"        \"data\": \"2017-02-21T00:00:00.000Z\",",
							"        \"designacao\": \"Escolha e análise do objeto\",",
							"        \"duracao\": \"4h\",",
							"        \"observacoes\": \"Coluna neoclássica com policromia\",",
							"        \"processoObra\": 1,",
							"        \"tecnicoObra\": 1",
							"    },",
							"    {",
							"        \"idProcedimento\": 2,",
							"        \"data\": \"2017-02-28T00:00:00.000Z\",",
							"        \"designacao\": \"Recolha de fotografias\",",
							"        \"duracao\": \"3h\",",
							"        \"observacoes\": \"Geral e de pormenor\",",
							"        \"processoObra\": 1,",
							"        \"tecnicoObra\": 2",
							"    },",
							"    {",
							"        \"idProcedimento\": 3,",
							"        \"data\": \"2017-03-14T00:00:00.000Z\",",
							"        \"designacao\": \"Avaliação para a recolha de amostras\",",
							"        \"duracao\": \"2h\",",
							"        \"observacoes\": \"\",",
							"        \"processoObra\": 1,",
							"        \"tecnicoObra\": 3",
							"    },",
							"    {",
							"        \"idProcedimento\": 4,",
							"        \"data\": \"2017-03-14T00:00:00.000Z\",",
							"        \"designacao\": \"Limpeza superficial\",",
							"        \"duracao\": \"1:30h\",",
							"        \"observacoes\": \"\",",
							"        \"processoObra\": 1,",
							"        \"tecnicoObra\": 4",
							"    },",
							"    {",
							"        \"idProcedimento\": 5,",
							"        \"data\": \"2017-03-14T00:00:00.000Z\",",
							"        \"designacao\": \"Recolha de fotografias\",",
							"        \"duracao\": \"1:30h\",",
							"        \"observacoes\": \"Geral e de pormenor\",",
							"        \"processoObra\": 1,",
							"        \"tecnicoObra\": 5",
							"    },",
							"    {",
							"        \"idProcedimento\": 6,",
							"        \"data\": \"2017-03-21T00:00:00.000Z\",",
							"        \"designacao\": \"Avaliação para a recolha de amostras\",",
							"        \"duracao\": \"\",",
							"        \"observacoes\": \"\",",
							"        \"processoObra\": 1,",
							"        \"tecnicoObra\": 6",
							"    },",
							"    {",
							"        \"idProcedimento\": 7,",
							"        \"data\": \"2017-03-21T00:00:00.000Z\",",
							"        \"designacao\": \"Recolha de amostras\",",
							"        \"duracao\": \"4h\",",
							"        \"observacoes\": \"\",",
							"        \"processoObra\": 1,",
							"        \"tecnicoObra\": 7",
							"    },",
							"    {",
							"        \"idProcedimento\": 8,",
							"        \"data\": \"2017-03-21T00:00:00.000Z\",",
							"        \"designacao\": \"Recolha de fotografias\",",
							"        \"duracao\": \"4h\",",
							"        \"observacoes\": \"À recolha de amostras\",",
							"        \"processoObra\": 1,",
							"        \"tecnicoObra\": 1",
							"    }",
							"]);",
							"         });",
							"    }",
							"    //Se o estado for 500",
							"    else if(pm.response.to.have.status(500)){",
							"        pm.response.to.have.body(\"Erro na query\");",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/procedimentos",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"procedimentos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de um procedimento com ID inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7117219e-22a5-42b9-a182-c24bb6c873da",
						"exec": [
							"pm.test(\"Ligação Não Encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Mensagem de Erro encontrada\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\": \"Procedimento not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/procedimento/id/-1",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"procedimento",
						"id",
						"-1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de pedido dos processos de Obra",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2885ab4f-3e5a-4597-8dd7-b653b02b3f3e",
						"exec": [
							"pm.test(\"Teste à Ligação com o Servidor\", function () {",
							"    //Se o estado for 200",
							"    if(pm.response.to.have.status(200)){",
							"         pm.test(\"Resposta de /processosObra\", function () {",
							"            var jsonData = pm.response.json();",
							"            pm.expect(jsonData).to.eql([",
							"    {",
							"        \"numProcesso\": 1,",
							"        \"designacao\": \"Coluna neoclássica com policromia\",",
							"        \"objeto\": 1",
							"    }",
							"]);",
							"         });",
							"    }",
							"    //Se o estado for 500",
							"    else if(pm.response.to.have.status(500)){",
							"        pm.response.to.have.body(\"Erro na query\");",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/processosObra",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"processosObra"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de pedido de um processo de obra com ID inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c65577d5-ce20-4f9e-9613-130d02dceaa1",
						"exec": [
							"pm.test(\"Ligação Não Encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Mensagem de Erro encontrada\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\": \"ProcessoObra not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/processosObra/id/-1",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"processosObra",
						"id",
						"-1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de pedido dos Processos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6fbcb076-9644-4d4c-9be2-df3b0f4d42c6",
						"exec": [
							"pm.test(\"Teste à Ligação com o Servidor\", function () {",
							"    //Se o estado for 200",
							"    if(pm.response.to.have.status(200)){",
							"         pm.test(\"Resposta de /processos\", function () {",
							"            var jsonData = pm.response.json();",
							"            pm.expect(jsonData).to.eql([",
							"    {",
							"        \"idProcesso\": 1,",
							"        \"LCRM\": \"0005-04-2006-MOB\",",
							"        \"CEARC\": \"1221/21/06\",",
							"        \"dataAberturaLCRM\": \"2006-04-27T23:00:00.000Z\",",
							"        \"dataAberturaCEARC\": \"2006-04-27T23:00:00.000Z\",",
							"        \"dataEntradaLCRM\": \"2006-04-27T23:00:00.000Z\",",
							"        \"dataEntradaCEARC\": \"2006-04-27T23:00:00.000Z\",",
							"        \"objeto\": 1",
							"    }",
							"]);",
							"         });",
							"    }",
							"    //Se o estado for 500",
							"    else if(pm.response.to.have.status(500)){",
							"        pm.response.to.have.body(\"Erro na query\");",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/processos",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"processos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de um processo com ID inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eeb59567-c80c-4360-9da5-c96e74bb169d",
						"exec": [
							"pm.test(\"Ligação Não Encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Mensagem de Erro encontrada\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\": \"Processo not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/processos/id/-1",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"processos",
						"id",
						"-1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de pedido de objetos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "62ab429f-939b-4abe-994e-0ba5f0177b4e",
						"exec": [
							"pm.test(\"Teste à Ligação com o Servidor\", function () {",
							"    //Se o estado for 200",
							"    if(pm.response.to.have.status(200)){",
							"         pm.test(\"Resposta de /objetos\", function () {",
							"            var jsonData = pm.response.json();",
							"            pm.expect(jsonData).to.eql([",
							"    {",
							"        \"idObjeto\": 1,",
							"        \"designacao\": \"Coluna neoclássica com policromia\",",
							"        \"superCategoria\": \"Bens Culturais\",",
							"        \"categoria\": \"Móvel Integrado\",",
							"        \"subCategoria\": \"Coluna pertence a um retábulo\",",
							"        \"tipologia\": \"Arte Sacra\",",
							"        \"localizacao\": \"Lisboa\",",
							"        \"dimensoes\": \"Comp x Prof. x Alt. - 131,5 cm | Diâmetro 13 cm\",",
							"        \"outrasDimensoes\": \"Lado - 19 x 19 cm | Diagonal - 25 cm\",",
							"        \"conjunto\": 1,",
							"        \"elementosConjunto\": \"Bens do Conjunto - Retábulos e outras alfaias religiosas |Elementos Constituintes do Bem Cultural - Desconhecido\",",
							"        \"elementosAcessorios\": \"O tronco da coluna é constituído por madeira de nogueira e o capitel será provavelmente de marupa, existindo a hipótese de ser de choupo ou afusélia. Os frisos aparentam ser do mesmo material que o corpo da coluna.\",",
							"        \"marcasAutoria\": \"Não foram identificadas quaisquer marcas deste género\",",
							"        \"marcasMontagem\": \"Riscador; marcas geométricas quadradas incisas na madeira; marcas de entalhe.\",",
							"        \"marcasConstrucao\": \"Riscador.\",",
							"        \"classificacaoPatrimonial\": \"Nacional/Regional\",",
							"        \"estilo\": \"Neo-clássico\",",
							"        \"epoca\": \"Coevo\",",
							"        \"qualidade\": \"Boa\",",
							"        \"estruturaMaterial\": \"Suporte: Madeira de nogueira. Intervenções diferenciadas em madeiras de cerejeira.\",",
							"        \"superficieMaterial\": \"Preparação branca de cré ou gesso, cola de coelho, bollus (argila da arménia), folha de ouro, policromia, purpurina, elementos metálicos, massa de vidreiro\",",
							"        \"tecnicaEstrutura\": \"Suporte: Entalhamento; Ligação entre a coluna e capitel simples (macho-fêmea) colada; frisos pregados com elementos metálicos;\",",
							"        \"tecnicaSuperficie\": \"Policromias, repolicromias e repintes. As policromias originais poderiam ser marmoreados/imitação de lápis lazúli.\",",
							"        \"descricao\": \"Coluna neoclássica, com policromia, repolicromias e repintes, tendo sido por isso, alvo de intervenções posteriores. Formada por vários blocos: corpo da coluna, capitel e frisos. Decoração do capitel com volutas; apliques metálicos; bute; perfil decorativo.\",",
							"        \"analogias\": \"Desconhecidas\",",
							"        \"conclusoes\": \"A coluna pertence a um retábulo que é desconhecido, uma vez que este foi desmantelado e, provavelmente, todas as suas parte constituintes foram vendidas em separado, desconhecendo-se a sua proveniência.\",",
							"        \"autoria\": \"Desconhecida\",",
							"        \"datacao\": \"Século XVIII/XIX\",",
							"        \"localOrigem\": \"Desconhecida\",",
							"        \"condicoesAmbientais\": \"Não é conhecida a sua proveniência, nem o seu percurso até chegar ao proprietário atual, não se conhecendo assim as condições ambientais do local em que esteve preservado. Prevê-se que a possível localização futura será a casa do proprietário, podendo por isso, haver um maior controlo das condições atmosféricas.\"",
							"    }",
							"]);",
							"         });",
							"    }",
							"    //Se o estado for 500",
							"    else if(pm.response.to.have.status(500)){",
							"        pm.response.to.have.body(\"Erro na query\");",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/objetos",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"objetos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de um objeto de ID inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "23507a12-06ad-4a61-890f-dc774f82adad",
						"exec": [
							"pm.test(\"Ligação Não Encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Mensagem de Erro encontrada\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\": \"Objeto not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/objetos/id/-1",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"objetos",
						"id",
						"-1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de pedido das Imagens",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b1d284c9-e5be-4bd1-a940-e83191b71c66",
						"exec": [
							"pm.test(\"Teste à Ligação com o Servidor\", function () {",
							"    //Se o estado for 200",
							"    if(pm.response.to.have.status(200)){",
							"         pm.test(\"Resposta de /imagens\", function () {",
							"            var jsonData = pm.response.json();",
							"            pm.expect(jsonData).to.eql([",
							"    {",
							"        \"idImagem\": 1,",
							"        \"imagem\": \"imgColuna1.jpg\",",
							"        \"tipo\": \"fotografia\",",
							"        \"formato\": \"JPEG\",",
							"        \"referencia\": \"Nikon 3300\",",
							"        \"documentacao\": \"Capitel e pormenores (CD) | Análises estratigráficas (CD)\",",
							"        \"objeto\": 1",
							"    },",
							"    {",
							"        \"idImagem\": 2,",
							"        \"imagem\": \"grafColuna1.jpg\",",
							"        \"tipo\": \"grafico\",",
							"        \"formato\": \"JPEG\",",
							"        \"referencia\": \"Nikon 3300\",",
							"        \"documentacao\": \"FTIR\",",
							"        \"objeto\": 1",
							"    }",
							"]);",
							"         });",
							"    }",
							"    //Se o estado for 500",
							"    else if(pm.response.to.have.status(500)){",
							"        pm.response.to.have.body(\"Erro na query\");",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/imagens",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"imagens"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao pedido de imagens de um objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ee998b12-bf02-4030-a285-0b812d8e1904",
						"exec": [
							"pm.test(\"Ligação Bem Sucedida\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql([",
							"    {",
							"        \"idImagem\": 1,",
							"        \"imagem\": \"imgColuna1.jpg\",",
							"        \"tipo\": \"fotografia\",",
							"        \"formato\": \"JPEG\",",
							"        \"referencia\": \"Nikon 3300\",",
							"        \"documentacao\": \"Capitel e pormenores (CD) | Análises estratigráficas (CD)\",",
							"        \"objeto\": 1",
							"    },",
							"    {",
							"        \"idImagem\": 2,",
							"        \"imagem\": \"grafColuna1.jpg\",",
							"        \"tipo\": \"grafico\",",
							"        \"formato\": \"JPEG\",",
							"        \"referencia\": \"Nikon 3300\",",
							"        \"documentacao\": \"FTIR\",",
							"        \"objeto\": 1",
							"    }",
							"]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/objetos/1/imagens",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"objetos",
						"1",
						"imagens"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de pedido num interessado num objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aca4539b-ac68-42e9-8b98-51c38144e8d8",
						"exec": [
							"pm.test(\"Ligação Bem Sucedida\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql([",
							"    {",
							"        \"idInteressado\": 1,",
							"        \"enderecoPostal\": \"Coimbra\",",
							"        \"enderecoEletronico\": \"Sem informação\",",
							"        \"contacto\": \"Sem informação\",",
							"        \"tipo\": \"Proprietário\"",
							"    },",
							"    {",
							"        \"idInteressado\": 2,",
							"        \"enderecoPostal\": \"Lisboa\",",
							"        \"enderecoEletronico\": \"Sem informação\",",
							"        \"contacto\": \"Sem informação\",",
							"        \"tipo\": \"Salvador Sanchez\"",
							"    },",
							"    {",
							"        \"idInteressado\": 3,",
							"        \"enderecoPostal\": \"Não se aplica\",",
							"        \"enderecoEletronico\": \"Não se aplica\",",
							"        \"contacto\": \"Não se aplica\",",
							"        \"tipo\": \"Mecenas\"",
							"    }",
							"]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://brandi.ipt.pt/api/objetos/1/interessados",
					"protocol": "http",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"path": [
						"api",
						"objetos",
						"1",
						"interessados"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de um pedido por poluicao de um objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "390bf113-0c67-4927-9608-f18d5ae8c413",
						"exec": [
							"pm.test(\"Ligação não encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de Erro encontrada \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\": \"Poluição not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/objetos/-1/poluicao",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"objetos",
						"-1",
						"poluicao"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de pedido de ciclos climatericos de um objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "70354f94-bf46-45c2-b302-572aa9863a3d",
						"exec": [
							"pm.test(\"Ligação não encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de Erro encontrada \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\": \"Ciclos climatéricos not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/objetos/-1/ciclosclimatericos",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"objetos",
						"-1",
						"ciclosclimatericos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de pedido por fontes de um objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e3f2d870-ece9-4b78-acc9-e1698fb695db",
						"exec": [
							"pm.test(\"Ligação não encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de Erro encontrada \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\": \"Fontes not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://brandi.ipt.pt/api/objetos/-1/fontes",
					"protocol": "http",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"path": [
						"api",
						"objetos",
						"-1",
						"fontes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de pedido de iluminação de um objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6e5489ec-0873-44cf-a628-a61988f9f508",
						"exec": [
							"pm.test(\"Ligação não encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de Erro encontrada \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\": \"Iluminação not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://brandi.ipt.pt/api/objetos/-1/iluminacao",
					"protocol": "http",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"path": [
						"api",
						"objetos",
						"-1",
						"iluminacao"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao pedido de propostas de intervenção",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "86d76f43-8030-4dcd-9103-15c386b86b1a",
						"exec": [
							"pm.test(\"Teste ao Pedido de Intervenção\", function () {",
							"    //Se o estado for 200",
							"    if(pm.response.to.have.status(200)){",
							"         pm.test(\"Resposta de /propostasIntervencao\", function () {",
							"            var jsonData = pm.response.json();",
							"            pm.expect(jsonData).to.eql([",
							"    {",
							"        \"idProposta\": 1,",
							"        \"tipo\": \"Conservação | Restauro\",",
							"        \"dataProposto\": null,",
							"        \"dataAceite\": null,",
							"        \"interlecutoresIPT\": \"Fernando Antunes (IPT) LCRM CEARC | Beatriz Penas, Leonor Miranda\",",
							"        \"interlecutoresCliente\": \"\",",
							"        \"objeto\": 1",
							"    }",
							"]);",
							"         });",
							"    }",
							"    //Se o estado for 500",
							"    else if(pm.response.to.have.status(500)){",
							"        pm.response.to.have.body(\"Erro na query\");",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://brandi.ipt.pt/api/propostasIntervencao",
					"protocol": "http",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"path": [
						"api",
						"propostasIntervencao"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste de pedidos de intervenção de um objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3718eb4b-2a4b-4a8e-b40e-680e24be6586",
						"exec": [
							"pm.test(\"Ligação não encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de Erro encontrada \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\": \"Pedidos de intervenção not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://brandi.ipt.pt/api/objetos/-1/pedidosintervencao",
					"protocol": "http",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"path": [
						"api",
						"objetos",
						"-1",
						"pedidosintervencao"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao pedido de conservações de um objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4a1d25bb-3514-4b8c-a60c-d0996e4984a2",
						"exec": [
							"pm.test(\"Ligação não encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de Erro encontrada \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\":\"Conservacoes not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://brandi.ipt.pt/api/objetos/-1/conservacoes",
					"protocol": "http",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"path": [
						"api",
						"objetos",
						"-1",
						"conservacoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao pedido de propostas de intervenção de um objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "644eb631-edd5-4d1b-984e-ce447dbe12e2",
						"exec": [
							"pm.test(\"Ligação não encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de Erro encontrada \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\":\"PropostasIntervencao not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://brandi.ipt.pt/api/objetos/-1/propostasIntervencao",
					"protocol": "http",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"path": [
						"api",
						"objetos",
						"-1",
						"propostasIntervencao"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao pedido de intervenções",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "33dd04d2-53ba-4ae7-805d-003c96ddb3ac",
						"exec": [
							"pm.test(\"Teste ao Pedido de Intervenção\", function () {",
							"    //Se o estado for 200",
							"    if(pm.response.to.have.status(200)){",
							"         pm.test(\"Resposta de /intervencoes\", function () {",
							"            var jsonData = pm.response.json();",
							"            pm.expect(jsonData).to.eql([",
							"    {",
							"        \"idIntervencao\": 1,",
							"        \"tipo\": \"Conservação | Restauro\",",
							"        \"intervencao\": \"Estrutura | Suporte:No suporte propõe-se apenas a limpeza superficial, com água, e remoção de adesivos antigos.Remoção da massa oleica que se encontra na zona inferior da coluna.Preenchimentos das lacunas devido à serra elétrica, através do entalhamento da madeira de cerejeira.\",",
							"        \"recursos\": \"Para a limpeza prevê-se o uso de um pano humedecido em água.Na remoção do adesivo usar-se-á água para o seu amolecimento e o bisturi para a sua remoção.O bisturi será também usado para remover a massa oleica.\",",
							"        \"estado\": \"proposto\",",
							"        \"proposta\": 1",
							"    }",
							"]);",
							"         });",
							"    }",
							"    //Se o estado for 500",
							"    else if(pm.response.to.have.status(500)){",
							"        pm.response.to.have.body(\"Erro na query\");",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://brandi.ipt.pt/api/intervencoes",
					"protocol": "http",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"path": [
						"api",
						"intervencoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao pedido de intervenções de um objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "970ab41c-9a7e-4945-a35f-4d198659bf23",
						"exec": [
							"pm.test(\"Ligação não encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de Erro encontrada \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\":\"intervencoes not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://brandi.ipt.pt/api/objetos/-1/intervencoes",
					"protocol": "http",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"path": [
						"api",
						"objetos",
						"-1",
						"intervencoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao pedido de exames de um objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "316b3890-0c73-497f-8b31-d248989c2083",
						"exec": [
							"pm.test(\"Ligação não encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de Erro encontrada \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\":\"Objeto not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://brandi.ipt.pt/api/objetos/-1/exames",
					"protocol": "http",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"path": [
						"api",
						"objetos",
						"-1",
						"exames"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao pedido de testes feitos num exame",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2efcd055-03fa-4f65-8102-293fb22dc603",
						"exec": [
							"pm.test(\"Ligação Bem Sucedida\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Resposta de /exames/1/testes\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql([",
							"    {",
							"        \"idTeste\": 1,",
							"        \"referecia\": \"Observação á vista desarmada\",",
							"        \"localizacao\": \"Corpo da coluna e capitel\",",
							"        \"objetivosEspecificos\": \"Identificação dos materiais\",",
							"        \"resultados\": \"Confirmação do uso de folha de ouro, purpurina, massa oleica, camada de preparação de gesso ou cré, policromia.\",",
							"        \"data\": \"2017-02-21T00:00:00.000Z\",",
							"        \"exame\": 1,",
							"        \"tecnico\": 1",
							"    }",
							"]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/exames/1/testes",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"exames",
						"1",
						"testes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao pedido de testes feitos por um técnico",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b38d9fa4-f7bb-4b1d-a8d3-478169336401",
						"exec": [
							"pm.test(\"Ligação não encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de Erro encontrada \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\":\"Objeto not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://brandi.ipt.pt/api/tecnicos/-1/testes",
					"protocol": "http",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"path": [
						"api",
						"tecnicos",
						"-1",
						"testes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao pedido de documentação  de um objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ac7cda9b-c6d9-49ff-b687-24aa2637c97e",
						"exec": [
							"pm.test(\"Ligação não encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de Erro encontrada \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\":\"Documentacao not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://brandi.ipt.pt/api/objetos/-1/documentacao",
					"protocol": "http",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"path": [
						"api",
						"objetos",
						"-1",
						"documentacao"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao pedido de testes solvente de uma análise",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "05f2dec6-0ffc-42fe-a4c0-7daa692814cb",
						"exec": [
							"pm.test(\"Ligação não encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de Erro encontrada \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\":\"Testes not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://brandi.ipt.pt/api/analise/-1/testesSolvente",
					"protocol": "http",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"path": [
						"api",
						"analise",
						"-1",
						"testesSolvente"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao pedido da análise solventes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aea35076-7249-48c5-9359-0189479e44cb",
						"exec": [
							"pm.test(\"Ligação Bem Sucedida\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Resposta de /analisesSolventes\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql([",
							"    {",
							"        \"idAnalise\": 1,",
							"        \"sujidade\": \"Repintes\",",
							"        \"data\": \"1970-01-01T00:00:00.000Z\",",
							"        \"caracteristicas\": \"Devido à dificuldade na remoção de repintes de forma mecânica, foi testado o decapante para facilitar a sua extração\",",
							"        \"tecnico\": 1,",
							"        \"objeto\": 1",
							"    }",
							"]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/analisesSolventes",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"analisesSolventes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao pedido de análises  solventes de um objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a00b8e71-3b15-4cc1-8260-8047fe410abd",
						"exec": [
							"pm.test(\"Ligação Bem Sucedida\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Resposta de /objetos/1/analisesSolventes\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql([",
							"    {",
							"        \"idAnalise\": 1,",
							"        \"sujidade\": \"Repintes\",",
							"        \"data\": \"1970-01-01T00:00:00.000Z\",",
							"        \"caracteristicas\": \"Devido à dificuldade na remoção de repintes de forma mecânica, foi testado o decapante para facilitar a sua extração\",",
							"        \"tecnico\": 1,",
							"        \"objeto\": 1",
							"    }",
							"]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "brandi.ipt.pt:80/api/objetos/1/analisesSolventes",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"port": "80",
					"path": [
						"api",
						"objetos",
						"1",
						"analisesSolventes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao pedido de análises solventes de um técnico",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f9f353b4-b3e2-4a59-994c-48b1e2d0311a",
						"exec": [
							"pm.test(\"Ligação não encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de Erro encontrada \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\":\"analisesSolventes not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://brandi.ipt.pt/api/tecnicos/-1/analisesSolventes",
					"protocol": "http",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"path": [
						"api",
						"tecnicos",
						"-1",
						"analisesSolventes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Teste ao pedido de intervenções anteriores de um objeto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8608f8a3-ca41-4eec-b004-0a4f9ee45ffc",
						"exec": [
							"pm.test(\"Ligação não encontrada\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensagem de Erro encontrada \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({",
							"        \"erro\":\"Testes not found\"",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://brandi.ipt.pt/api/objetos/-1/intervencoesanteriores",
					"protocol": "http",
					"host": [
						"brandi",
						"ipt",
						"pt"
					],
					"path": [
						"api",
						"objetos",
						"-1",
						"intervencoesanteriores"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ff062cf5-02cb-4be8-a464-d0f0635228ef",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "da2c3260-dc31-4a2a-a347-836ce774a493",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}